// AUTHOR: HUDSON GREEN
// CONTRIBUTORS: N/A

class TextShadow : ZilchComponent {
    
    [Property] var Color : Real4 = Real4(0.15, 0.15, 0.15, 1.0);
    [Property] var Offset : Real2 = Real2(0.05, -0.05);
    
    function Initialize(init : CogInitializer) {
        
        var txtShadow = this.Space.CreateAtPosition(Archetype.TextShadow, this.Owner.Transform.WorldTranslation);
        txtShadow.AttachToRelative(this.Owner);
        
        this.UpdateTextProperties();
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
    }
    
    function OnLogicUpdate(event : UpdateEvent) {
        
        this.UpdateTextProperties();
        
    }
    
    function UpdateTextProperties() {
        
        var txtShadow = this.Owner.FindChildByName("TextShadow");
        var txtColor = Real4(this.Color.XYZ, this.Owner.SpriteText.Color.W);
        
        txtShadow.SpriteText.Text = this.Owner.SpriteText.Text;
        txtShadow.SpriteText.Visible = this.Owner.SpriteText.Visible;
        txtShadow.SpriteText.Align = this.Owner.SpriteText.Align;
        txtShadow.SpriteText.Font = this.Owner.SpriteText.Font;
        txtShadow.SpriteText.FontSize = this.Owner.SpriteText.FontSize;
        txtShadow.SpriteText.Color = txtColor;
        txtShadow.SpriteText.PixelsPerUnit = this.Owner.SpriteText.PixelsPerUnit;
        txtShadow.SpriteText.Smoothing = this.Owner.SpriteText.Smoothing;
        txtShadow.SpriteText.BlendMode = this.Owner.SpriteText.BlendMode;
        
        txtShadow.Transform.WorldTranslation = this.Owner.Transform.WorldTranslation + Real3(this.Offset, -0.005);
        txtShadow.Transform.WorldScale = this.Owner.Transform.WorldScale;
        txtShadow.Transform.WorldRotation = this.Owner.Transform.WorldRotation;
        
    }
    
}
