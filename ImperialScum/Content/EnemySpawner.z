class EnemySpawner : ZilchComponent
{
    
    [Property]
    var Waittime : Real = 10;
    
    var Timer : Real;
    
    var CanSpawn:Boolean = true;
    
    [Property]
     var WhatToSpawn : Archetype;
    
    function Initialize(init : CogInitializer)
    {
        this.Timer = this.Waittime;
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    }

    //Collisions, to ensure no enemies spawn on the player
    function OnCollisionStarted(event : CollisionEvent)
    {
        this.CanSpawn = false;
    }
    
    function OnCollisionEnded(event : CollisionEvent)
    {
        this.CanSpawn = true;
    }
  
    //This Schtuff
    function OnLogicUpdate(event : UpdateEvent)
    {
        var boss = this.Space.FindObjectByName("BOSS");
        
        if(boss != null)
        {
        this.Timer -= event.Dt; 
       
        if (this.Timer <= 0)
        {
            if (this.CanSpawn == true)
            {
                var spawnPosition = this.Owner.Transform.Translation;

                this.Space.CreateAtPosition(this.WhatToSpawn, spawnPosition);
                this.Space.CreateAtPosition(Archetype.LegendaryExplode, spawnPosition);
                this.Space.CreateAtPosition(Archetype.ExplodeBubbles, spawnPosition);
                
                this.Timer += this.Waittime;
            }
            else
            {
                this.Timer = 1;
            }

        }
        
        }
        else this.Owner.Destroy;
    }
}
