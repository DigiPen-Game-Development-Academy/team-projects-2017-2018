//Creator: Justin 
//dont attach this to anything that uses a sound emitter for anything else

class MoveSound : ZilchComponent
{
    [Property] var MoveNoise : SoundCue;
    [Property] var RandomPitch : Boolean = true;
    [Property] var TimeTillRandomPitch : Real = 5;
    var IsMove : Boolean = false;
    
    var Timer : Real;
    
    var Rand : Random = Random();
    
    function Initialize(init : CogInitializer)
    {
        this.Timer = this.TimeTillRandomPitch;
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    
    function RandomizePitch()
    {
        this.Owner.SoundEmitter.Pitch = this.Rand.Real() / 1;
        //Console.WriteLine(this.Owner.SoundEmitter.Pitch);
    }
    
    function IsPlayerMove() : Boolean
    {
        if (Zero.Keyboard.KeyIsDown(Keys.W) || Zero.Keyboard.KeyIsDown(Keys.A)
        || Zero.Keyboard.KeyIsDown(Keys.S) || Zero.Keyboard.KeyIsDown(Keys.D))
        {
            return true;
        }
        else return false;
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        //Console.WriteLine(this.Timer);
        
        if (this.RandomPitch)
        {
            if (this.Timer >= 0)
            {
                this.Timer -= event.Dt;
            }
            else
            {
                this.RandomizePitch();
                this.Timer = this.TimeTillRandomPitch;
            }
        }
        
        if (this.IsPlayerMove() && !this.Owner.SoundEmitter.IsPlaying())
        {
            this.Owner.SoundEmitter.PlayCue(this.MoveNoise);
        }
        else if (!this.IsPlayerMove())
        {
            this.Owner.SoundEmitter.Stop();
        }
    }
}
